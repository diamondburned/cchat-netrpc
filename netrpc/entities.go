// Code generated by entity_types. DO NOT EDIT.

package netrpc

import "github.com/diamondburned/cchat"

const (
	UserEntity          EntityType = "User"
	ServiceEntity       EntityType = "Service"
	SessionEntity       EntityType = "Session"
	ServerEntity        EntityType = "Server"
	ServerUpdateEntity  EntityType = "ServerUpdate"
	MessageHeaderEntity EntityType = "MessageHeader"
	MessageCreateEntity EntityType = "MessageCreate"
	MessageUpdateEntity EntityType = "MessageUpdate"
	MessageDeleteEntity EntityType = "MessageDelete"
	ListMemberEntity    EntityType = "ListMember"
	MemberSectionEntity EntityType = "MemberSection"
)

// QueryEntityType resolves the entity type for the given value.
// An empty string is returned if the value is unknown.
func QueryEntityType(v cchat.Identifier) EntityType {
	switch v.(type) {
	case cchat.User:
		return UserEntity
	case cchat.Service:
		return ServiceEntity
	case cchat.Session:
		return SessionEntity
	case cchat.Server:
		return ServerEntity
	case cchat.ServerUpdate:
		return ServerUpdateEntity
	case cchat.MessageHeader:
		return MessageHeaderEntity
	case cchat.MessageCreate:
		return MessageCreateEntity
	case cchat.MessageUpdate:
		return MessageUpdateEntity
	case cchat.MessageDelete:
		return MessageDeleteEntity
	case cchat.ListMember:
		return ListMemberEntity
	case cchat.MemberSection:
		return MemberSectionEntity
	}

	return ""
}

// IsValid validates that the entity type is valid.
func (t EntityType) IsValid() bool {
	switch t {
	case
		UserEntity,
		ServiceEntity,
		SessionEntity,
		ServerEntity,
		ServerUpdateEntity,
		MessageHeaderEntity,
		MessageCreateEntity,
		MessageUpdateEntity,
		MessageDeleteEntity,
		ListMemberEntity,
		MemberSectionEntity:
		return true
	default:
		return false
	}
}
